{
	"info": {
		"_postman_id": "ef13df6a-fcde-4b68-b06f-49866e3454d1",
		"name": "httpbin edit collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23281794"
	},
	"item": [
		{
			"name": "error status / response body check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"//check expected values ",
							"//console.log(jsonData.args.isGood); ",
							"",
							"//check data type",
							"//console.log(typeof jsonData.args.isGood);",
							"",
							"pm.test(\"Check responce body values\", function () {",
							"    pm.expect(jsonData.args.isGood).to.eql('true');",
							"    pm.expect(jsonData.args.isBad).to.eql('false');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://httpbin.org/get?isGood=true&isBad=false",
					"protocol": "https",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "isGood",
							"value": "true"
						},
						{
							"key": "isBad",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "global var / array element check",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let date = Date.now();",
							"//console.log(date);",
							"",
							"pm.globals.set(\"currentDate\", date);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();",
							"",
							"pm.test(\"Global variable check\", function () {",
							"    pm.expect(jsonData.json.currentDate).to.eql(pm.globals.get(\"currentDate\"));",
							"});",
							"",
							"pm.test(\"Checking assertion value of the array\", function () {",
							"    pm.expect(jsonData.json.permissions[2]).to.eql(4000);",
							"});",
							"",
							"pm.test(\"Checking presense of the specific value in array\", function () {",
							"    pm.expect(jsonData.json.permissions).to.include(3000);",
							"});",
							"",
							"console.log(jsonData.json.permissions[2]);",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Mike\",\n    \"permissions\": [2000, 3000, 4000],\n    \"currentDate\": {{currentDate}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://httpbin.org/post",
					"protocol": "https",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "header check / content-type value",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "mike_g",
							"type": "text"
						},
						{
							"key": "email",
							"value": "mike_g@example.com",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://httpbin.org/put",
					"protocol": "https",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"put"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete status code check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://httpbin.org/delete",
					"protocol": "https",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"delete"
					]
				}
			},
			"response": []
		}
	]
}